<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create Post - Social Media App</title>
    <link rel="icon" href="/img/domz logo without text.png">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            background: #fff;
            border-radius: 20px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
            overflow: hidden;
        }

        .header {
            background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);
            color: white;
            padding: 30px;
            text-align: center;
        }

        .header h1 {
            font-size: 28px;
            font-weight: 700;
            margin-bottom: 10px;
        }

        .header p {
            opacity: 0.9;
            font-size: 16px;
        }

        .nav-link {
            position: absolute;
            top: 20px;
            left: 20px;
            background: rgba(255, 255, 255, 0.2);
            color: white;
            padding: 12px 20px;
            text-decoration: none;
            border-radius: 25px;
            font-size: 14px;
            font-weight: 500;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
        }

        .nav-link:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: translateY(-2px);
        }

        .form-container {
            padding: 40px;
        }

        .user-info {
            display: flex;
            align-items: center;
            gap: 15px;
            margin-bottom: 30px;
            padding: 20px;
            background: #f8fafc;
            border-radius: 15px;
            border-left: 4px solid #4f46e5;
        }

        .user-avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
            font-size: 18px;
        }

        .user-details h3 {
            font-size: 18px;
            color: #1f2937;
            margin-bottom: 4px;
        }

        .user-details p {
            color: #6b7280;
            font-size: 14px;
        }

        .form-group {
            margin-bottom: 30px;
        }

        .form-label {
            display: block;
            font-weight: 600;
            color: #374151;
            margin-bottom: 12px;
            font-size: 16px;
        }

        .form-textarea {
            width: 100%;
            min-height: 200px;
            padding: 20px;
            border: 2px solid #e5e7eb;
            border-radius: 15px;
            font-size: 16px;
            font-family: inherit;
            resize: vertical;
            transition: all 0.3s ease;
            background: #f9fafb;
        }

        .form-textarea:focus {
            outline: none;
            border-color: #4f46e5;
            background: #fff;
            box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
        }

        .form-input {
            width: 100%;
            padding: 15px 20px;
            border: 2px solid #e5e7eb;
            border-radius: 15px;
            font-size: 16px;
            transition: all 0.3s ease;
            background: #f9fafb;
        }

        .form-input:focus {
            outline: none;
            border-color: #4f46e5;
            background: #fff;
            box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
        }

        .form-select {
            width: 100%;
            padding: 15px 20px;
            border: 2px solid #e5e7eb;
            border-radius: 15px;
            font-size: 16px;
            background: #f9fafb;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .form-select:focus {
            outline: none;
            border-color: #4f46e5;
            background: #fff;
            box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
        }

        .character-count {
            text-align: right;
            font-size: 14px;
            color: #6b7280;
            margin-top: 8px;
        }

        .character-count.warning {
            color: #f59e0b;
        }

        .character-count.danger {
            color: #ef4444;
        }

        .image-preview-container {
            margin-top: 15px;
            position: relative;
        }

        .image-preview {
            max-width: 100%;
            max-height: 300px;
            border-radius: 15px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

        .remove-image {
            position: absolute;
            top: 10px;
            right: 10px;
            background: rgba(239, 68, 68, 0.9);
            color: white;
            border: none;
            border-radius: 50%;
            width: 35px;
            height: 35px;
            cursor: pointer;
            font-size: 18px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .remove-image:hover {
            background: #dc2626;
            transform: scale(1.1);
        }

        .form-actions {
            display: flex;
            gap: 15px;
            justify-content: flex-end;
            margin-top: 40px;
            padding-top: 30px;
            border-top: 1px solid #e5e7eb;
        }

        .btn {
            padding: 15px 30px;
            border: none;
            border-radius: 15px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 10px;
        }

        .btn-secondary {
            background: #f3f4f6;
            color: #6b7280;
            border: 2px solid #e5e7eb;
        }

        .btn-secondary:hover {
            background: #e5e7eb;
            color: #4b5563;
            transform: translateY(-2px);
        }

        .btn-primary {
            background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);
            color: white;
            box-shadow: 0 4px 15px rgba(79, 70, 229, 0.3);
        }

        .btn-primary:hover:not(:disabled) {
            box-shadow: 0 8px 25px rgba(79, 70, 229, 0.4);
            transform: translateY(-2px);
        }

        .btn-primary:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
            box-shadow: 0 4px 15px rgba(79, 70, 229, 0.3);
        }

        .loading-spinner {
            display: none;
            width: 20px;
            height: 20px;
            border: 2px solid transparent;
            border-top: 2px solid currentColor;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .post-expiry-info {
            background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
            padding: 20px;
            border-radius: 15px;
            margin-bottom: 30px;
            border-left: 4px solid #f59e0b;
        }

        .post-expiry-info h4 {
            color: #92400e;
            font-size: 16px;
            margin-bottom: 8px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .post-expiry-info p {
            color: #a16207;
            font-size: 14px;
            line-height: 1.5;
        }

        .error-message {
            background: linear-gradient(135deg, #fef2f2 0%, #fee2e2 100%);
            color: #dc2626;
            padding: 15px 20px;
            border-radius: 15px;
            margin-bottom: 20px;
            border-left: 4px solid #ef4444;
            display: none;
        }

        .success-message {
            background: linear-gradient(135deg, #f0fdf4 0%, #dcfce7 100%);
            color: #16a34a;
            padding: 15px 20px;
            border-radius: 15px;
            margin-bottom: 20px;
            border-left: 4px solid #22c55e;
            display: none;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .container {
                margin: 0 10px;
                border-radius: 15px;
            }

            .form-container {
                padding: 30px 20px;
            }

            .header {
                padding: 20px;
            }

            .header h1 {
                font-size: 24px;
            }

            .form-actions {
                flex-direction: column;
            }

            .btn {
                width: 100%;
                justify-content: center;
            }

            .nav-link {
                position: static;
                display: inline-block;
                margin-bottom: 20px;
            }
        }

        /* Animation */
        .container {
            animation: slideUp 0.6s ease-out;
        }

        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>
</head>
<body>
    <a href="/dashboard" class="nav-link">← Back to Dashboard</a>
    
    <div class="container">
        <div class="header">
            <h1>Create New Post</h1>
            <p>Share your thoughts with your friends</p>
        </div>
        
        <div class="form-container">
            <div class="error-message" id="errorMessage"></div>
            <div class="success-message" id="successMessage"></div>
            
            <div class="user-info">
                <div class="user-avatar">
                    <%= currentUser.username.charAt(0).toUpperCase() %>
                </div>
                <div class="user-details">
                    <h3><%= currentUser.username %></h3>
                    <p>Posting as <%= currentUser.username %></p>
                </div>
            </div>
            
            <div class="post-expiry-info">
                <h4>
                    <span>⏰</span>
                    Post Expiry Notice
                </h4>
                <p>Your post will automatically be deleted after 50 hours to keep the feed fresh and relevant. Make sure your important content is saved elsewhere if needed!</p>
            </div>
            
            <form id="postForm">
                <div class="form-group">
                    <label for="content" class="form-label">What's on your mind?</label>
                    <textarea 
                        id="content" 
                        name="content" 
                        class="form-textarea" 
                        placeholder="Share your thoughts, experiences, or anything interesting..."
                        maxlength="2000"
                        required
                    ></textarea>
                    <div class="character-count" id="charCount">0 / 2000 characters</div>
                </div>
                
                <div class="form-group">
                    <label for="imageUrl" class="form-label">Image URL (Optional)</label>
                    <input 
                        type="url" 
                        id="imageUrl" 
                        name="imageUrl" 
                        class="form-input" 
                        placeholder="https://example.com/your-image.jpg"
                    >
                    <div class="image-preview-container" id="imagePreviewContainer" style="display: none;">
                        <img id="imagePreview" class="image-preview" alt="Image preview">
                        <button type="button" class="remove-image" id="removeImage">×</button>
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="visibility" class="form-label">Who can see this?</label>
                    <select id="visibility" name="visibility" class="form-select">
                        <option value="friends">Friends Only</option>
                        <option value="public">Everyone</option>
                        <option value="private">Only Me</option>
                    </select>
                </div>
                
                <div class="form-actions">
                    <a href="/dashboard" class="btn btn-secondary">Cancel</a>
                    <button type="submit" class="btn btn-primary" id="submitBtn">
                        <span class="loading-spinner" id="loadingSpinner"></span>
                        <span id="submitText">Publish Post</span>
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // DOM elements
        const postForm = document.getElementById('postForm');
        const contentTextarea = document.getElementById('content');
        const imageUrlInput = document.getElementById('imageUrl');
        const imagePreview = document.getElementById('imagePreview');
        const imagePreviewContainer = document.getElementById('imagePreviewContainer');
        const removeImageBtn = document.getElementById('removeImage');
        const charCount = document.getElementById('charCount');
        const submitBtn = document.getElementById('submitBtn');
        const submitText = document.getElementById('submitText');
        const loadingSpinner = document.getElementById('loadingSpinner');
        const errorMessage = document.getElementById('errorMessage');
        const successMessage = document.getElementById('successMessage');
        
        // Character count functionality
        contentTextarea.addEventListener('input', () => {
            const length = contentTextarea.value.length;
            const maxLength = 2000;
            
            charCount.textContent = `${length} / ${maxLength} characters`;
            
            if (length > maxLength * 0.9) {
                charCount.classList.add('danger');
                charCount.classList.remove('warning');
            } else if (length > maxLength * 0.7) {
                charCount.classList.add('warning');
                charCount.classList.remove('danger');
            } else {
                charCount.classList.remove('warning', 'danger');
            }
        });
        
        // Image preview functionality
        imageUrlInput.addEventListener('input', () => {
            const url = imageUrlInput.value.trim();
            
            if (url && isValidImageUrl(url)) {
                imagePreview.src = url;
                imagePreview.onload = () => {
                    imagePreviewContainer.style.display = 'block';
                };
                imagePreview.onerror = () => {
                    imagePreviewContainer.style.display = 'none';
                    showError('Invalid image URL or image could not be loaded');
                };
            } else {
                imagePreviewContainer.style.display = 'none';
            }
        });
        
        // Remove image functionality
        removeImageBtn.addEventListener('click', () => {
            imageUrlInput.value = '';
            imagePreviewContainer.style.display = 'none';
        });
        
        // Form submission
        postForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const content = contentTextarea.value.trim();
            const imageUrl = imageUrlInput.value.trim();
            const visibility = document.getElementById('visibility').value;
            
            // Validation
            if (!content) {
                showError('Post content is required');
                return;
            }
            
            if (content.length > 2000) {
                showError('Post content is too long (maximum 2000 characters)');
                return;
            }
            
            if (imageUrl && !isValidImageUrl(imageUrl)) {
                showError('Please enter a valid image URL');
                return;
            }
            
            // Show loading state
            setLoadingState(true);
            hideMessages();
            
            try {
                const response = await fetch('/api/posts', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        content,
                        imageUrl: imageUrl || undefined,
                        visibility
                    })
                });
                
                const data = await response.json();
                
                if (response.ok) {
                    showSuccess('Post created successfully! Redirecting to dashboard...');
                    
                    // Reset form
                    postForm.reset();
                    imagePreviewContainer.style.display = 'none';
                    charCount.textContent = '0 / 2000 characters';
                    charCount.classList.remove('warning', 'danger');
                    
                    // Redirect to dashboard after a short delay
                    setTimeout(() => {
                        window.location.href = '/dashboard';
                    }, 2000);
                } else {
                    showError(data.error || 'Failed to create post');
                }
            } catch (error) {
                console.error('Error creating post:', error);
                showError('Network error. Please check your connection and try again.');
            } finally {
                setLoadingState(false);
            }
        });
        
        // Utility functions
        function isValidImageUrl(url) {
            const imageExtensions = ['.jpg', '.jpeg', '.png', '.gif', '.webp', '.bmp'];
            const urlLower = url.toLowerCase();
            
            try {
                new URL(url); // Check if valid URL
                return imageExtensions.some(ext => 
                    urlLower.includes(ext) || 
                    urlLower.includes('image') || 
                    urlLower.includes('photo') ||
                    urlLower.includes('img')
                );
            } catch {
                return false;
            }
        }
        
        function setLoadingState(loading) {
            if (loading) {
                submitBtn.disabled = true;
                loadingSpinner.style.display = 'block';
                submitText.textContent = 'Publishing...';
            } else {
                submitBtn.disabled = false;
                loadingSpinner.style.display = 'none';
                submitText.textContent = 'Publish Post';
            }
        }
        
        function showError(message) {
            errorMessage.textContent = message;
            errorMessage.style.display = 'block';
            successMessage.style.display = 'none';
            
            // Auto-hide after 5 seconds
            setTimeout(() => {
                errorMessage.style.display = 'none';
            }, 5000);
        }
        
        function showSuccess(message) {
            successMessage.textContent = message;
            successMessage.style.display = 'block';
            errorMessage.style.display = 'none';
        }
        
        function hideMessages() {
            errorMessage.style.display = 'none';
            successMessage.style.display = 'none';
        }
        
        // Auto-resize textarea
        contentTextarea.addEventListener('input', () => {
            contentTextarea.style.height = 'auto';
            contentTextarea.style.height = Math.min(contentTextarea.scrollHeight, 400) + 'px';
        });
        
        // Focus on content textarea when page loads
        window.addEventListener('load', () => {
            contentTextarea.focus();
        });
    </script>
</body>
</html>