<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile - Domz</title>
    <link rel="icon" href="/img/domz logo without text.png">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            background: #f8f9fb;
            min-height: 100vh;
            color: #333;
        }

        .profile-container {
            display: flex;
            max-width: 1400px;
            margin: 0 auto;
            min-height: 100vh;
            background: #ffffff;
        }

        /* Sidebar Navigation */
        .sidebar {
            width: 280px;
            background: #ffffff;
            border-right: 1px solid #e8ecf0;
            padding: 20px;
            display: flex;
            flex-direction: column;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 12px;
            margin-bottom: 40px;
            padding: 10px;
        }

        .logo-icon {
            width: 40px;
            height: 40px;
            background: #6755FE;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
            font-size: 20px;
        }

        .logo-text {
            font-size: 24px;
            font-weight: 700;
            color: #6755FE;
        }

        .nav-menu {
            list-style: none;
            margin-bottom: 40px;
        }

        .nav-item {
            margin-bottom: 8px;
        }

        .nav-link {
            display: flex;
            align-items: center;
            gap: 16px;
            padding: 16px 20px;
            text-decoration: none;
            color: #666;
            border-radius: 16px;
            transition: all 0.3s ease;
            font-weight: 500;
        }

        .nav-link:hover, .nav-link.active {
            background: #6755FE;
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 4px 20px rgba(103, 85, 254, 0.3);
        }

        .nav-icon {
            width: 24px;
            height: 24px;
            fill: currentColor;
        }

        /* Main Content */
        .main-content {
            flex: 1;
            padding: 20px;
            overflow-y: auto;
            background: #f8f9fb;
        }

        /* Profile Header */
        .profile-header {
            background: #ffffff;
            border-radius: 20px;
            padding: 30px;
            margin-bottom: 24px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
            border: 1px solid #e8ecf0;
            position: relative;
            overflow: hidden;
        }

        .profile-cover {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 120px;
            background: linear-gradient(135deg, #6755FE 0%, #9c88ff 100%);
            border-radius: 20px 20px 0 0;
        }

        .profile-info {
            position: relative;
            z-index: 2;
            padding-top: 60px;
            display: flex;
            align-items: flex-end;
            gap: 24px;
        }

        .profile-avatar {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            background: #6755FE;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 48px;
            font-weight: 700;
            border: 4px solid white;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            flex-shrink: 0;
            cursor: pointer;
            position: relative;
            transition: all 0.3s ease;
            overflow: hidden;
        }
        
        .profile-avatar:hover {
            transform: scale(1.05);
        }
        
        .upload-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.7);
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        
        .profile-avatar:hover .upload-overlay {
            opacity: 1;
        }
        
        .profile-picture-upload {
            display: flex;
            align-items: center;
            gap: 20px;
            flex-wrap: wrap;
        }
        
        .upload-controls {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }
        
        .char-count {
            font-size: 12px;
            color: #666;
            font-weight: normal;
        }

        .profile-details {
            flex: 1;
            padding-bottom: 8px;
        }

        .profile-name {
            font-size: 28px;
            font-weight: 700;
            color: #333;
            margin-bottom: 8px;
        }

        .profile-username {
            font-size: 16px;
            color: #666;
            margin-bottom: 12px;
        }

        .profile-bio {
            font-size: 16px;
            color: #555;
            line-height: 1.5;
            margin-bottom: 16px;
        }

        .profile-meta {
            display: flex;
            align-items: center;
            gap: 24px;
            flex-wrap: wrap;
        }

        .meta-item {
            display: flex;
            align-items: center;
            gap: 8px;
            font-size: 14px;
            color: #666;
        }

        .meta-icon {
            width: 16px;
            height: 16px;
            fill: currentColor;
        }

        .profile-actions {
            display: flex;
            gap: 12px;
            padding-bottom: 8px;
        }

        .action-btn {
            padding: 12px 24px;
            border: none;
            border-radius: 12px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .btn-primary {
            background: #6755FE;
            color: white;
        }

        .btn-primary:hover {
            background: #5644d4;
            transform: translateY(-2px);
            box-shadow: 0 4px 20px rgba(103, 85, 254, 0.4);
        }

        .btn-secondary {
            background: #f1f5f9;
            color: #64748b;
            border: 1px solid #e2e8f0;
        }

        .btn-secondary:hover {
            background: #e2e8f0;
            color: #475569;
            transform: translateY(-2px);
        }

        .btn-icon {
            width: 16px;
            height: 16px;
            fill: currentColor;
        }

        /* Stats Section */
        .stats-section {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 24px;
        }

        .stat-card {
            background: #ffffff;
            border-radius: 16px;
            padding: 24px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
            border: 1px solid #e8ecf0;
            text-align: center;
            transition: all 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .stat-icon {
            width: 48px;
            height: 48px;
            background: rgba(103, 85, 254, 0.1);
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 16px;
            fill: #6755FE;
        }

        .stat-number {
            font-size: 28px;
            font-weight: 700;
            color: #333;
            margin-bottom: 8px;
        }

        .stat-label {
            font-size: 14px;
            color: #666;
            font-weight: 500;
        }

        /* Content Tabs */
        .content-tabs {
            background: #ffffff;
            border-radius: 20px;
            padding: 0;
            margin-bottom: 24px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
            border: 1px solid #e8ecf0;
            overflow: hidden;
        }

        .tabs-header {
            display: flex;
            border-bottom: 1px solid #e8ecf0;
        }

        .tab-btn {
            flex: 1;
            padding: 20px;
            background: none;
            border: none;
            font-size: 16px;
            font-weight: 600;
            color: #666;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
        }

        .tab-btn.active {
            color: #6755FE;
        }

        .tab-btn.active::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: #6755FE;
            border-radius: 3px 3px 0 0;
        }

        .tab-content {
            padding: 24px;
            min-height: 400px;
        }

        .tab-pane {
            display: none;
        }

        .tab-pane.active {
            display: block;
        }

        /* Posts Grid */
        .posts-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
        }

        .post-card {
            background: #f8f9fb;
            border-radius: 16px;
            padding: 20px;
            border: 1px solid #e8ecf0;
            transition: all 0.3s ease;
        }

        .post-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
        }

        .post-header {
            display: flex;
            align-items: center;
            gap: 12px;
            margin-bottom: 16px;
        }

        .post-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: #6755FE;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
            font-size: 14px;
        }

        .post-info h4 {
            font-size: 14px;
            font-weight: 600;
            color: #333;
            margin-bottom: 2px;
        }

        .post-time {
            font-size: 12px;
            color: #666;
        }

        .post-content {
            font-size: 15px;
            line-height: 1.6;
            color: #444;
            margin-bottom: 16px;
        }

        .post-actions {
            display: flex;
            gap: 16px;
            padding-top: 16px;
            border-top: 1px solid #e8ecf0;
        }

        .post-action {
            display: flex;
            align-items: center;
            gap: 8px;
            background: none;
            border: none;
            color: #666;
            cursor: pointer;
            padding: 8px 12px;
            border-radius: 8px;
            transition: all 0.3s ease;
            font-size: 14px;
        }

        .post-action:hover {
            background: rgba(103, 85, 254, 0.1);
            color: #6755FE;
        }

        .post-action-icon {
            width: 16px;
            height: 16px;
            fill: currentColor;
        }

        /* Settings Form */
        .settings-form {
            max-width: 600px;
        }

        .form-group {
            margin-bottom: 24px;
        }

        .form-label {
            display: block;
            font-size: 14px;
            font-weight: 600;
            color: #333;
            margin-bottom: 8px;
        }

        .form-input {
            width: 100%;
            padding: 12px 16px;
            border: 1px solid #e8ecf0;
            border-radius: 12px;
            font-size: 16px;
            background: #ffffff;
            transition: all 0.3s ease;
        }

        .form-input:focus {
            outline: none;
            border-color: #6755FE;
            box-shadow: 0 0 0 3px rgba(103, 85, 254, 0.1);
        }

        .form-textarea {
            min-height: 100px;
            resize: vertical;
        }

        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
        }

        /* Mobile Styles */
        @media (max-width: 768px) {
            .profile-container {
                flex-direction: column;
            }

            .sidebar {
                display: none;
            }

            .main-content {
                padding: 15px;
            }

            .profile-header {
                padding: 20px;
            }

            .profile-cover {
                height: 100px;
            }

            .profile-info {
                flex-direction: column;
                align-items: center;
                text-align: center;
                gap: 16px;
                padding-top: 40px;
            }

            .profile-avatar {
                width: 100px;
                height: 100px;
                font-size: 40px;
            }

            .profile-name {
                font-size: 24px;
            }

            .profile-actions {
                justify-content: center;
            }

            .stats-section {
                grid-template-columns: repeat(2, 1fr);
                gap: 16px;
            }

            .posts-grid {
                grid-template-columns: 1fr;
                gap: 16px;
            }

            .tabs-header {
                flex-wrap: wrap;
            }

            .tab-btn {
                font-size: 14px;
                padding: 16px;
            }

            .form-row {
                grid-template-columns: 1fr;
                gap: 16px;
            }
        }

        @media (max-width: 480px) {
            .profile-header {
                padding: 16px;
            }

            .profile-avatar {
                width: 80px;
                height: 80px;
                font-size: 32px;
            }

            .profile-name {
                font-size: 20px;
            }

            .stats-section {
                grid-template-columns: 1fr;
            }

            .stat-card {
                padding: 16px;
            }

            .tab-content {
                padding: 16px;
            }
        }

        /* Animations */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .stat-card, .post-card {
            animation: fadeInUp 0.4s ease;
        }

        .stat-card:nth-child(2) { animation-delay: 0.1s; }
        .stat-card:nth-child(3) { animation-delay: 0.2s; }
        .stat-card:nth-child(4) { animation-delay: 0.3s; }

        /* Mobile Bottom Navigation */
.mobile-nav {
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    background: #ffffff;
    border-top: 1px solid #e8ecf0;
    padding: 15px 0 max(15px, env(safe-area-inset-bottom));
    z-index: 1000;
}

.mobile-nav-items {
    display: flex;
    justify-content: space-around;
    align-items: center;
    max-width: 600px;
    margin: 0 auto;
}

.mobile-nav-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 4px;
    text-decoration: none;
    color: #666;
    transition: all 0.3s ease;
    padding: 8px;
}

.mobile-nav-item.active {
    color: #6755FE;
}

.mobile-nav-icon {
    width: 24px;
    height: 24px;
    fill: currentColor;
}

.mobile-nav-text {
    font-size: 12px;
    font-weight: 500;
}

/* Mobile Styles */
@media (max-width: 768px) {
    .app-container {
        flex-direction: column;
        padding-bottom: 80px;
    }

    .sidebar {
        display: none;
    }

    .mobile-nav {
        display: block;
    }

    .main-content {
        padding: 15px;
    }

    .feed-container {
        display: block;
    }

    .content-header {
        padding: 15px 20px;
        margin-bottom: 20px;
    }

    .welcome-text h1 {
        font-size: 22px;
    }

    .create-post-btn {
        padding: 10px 20px;
        font-size: 14px;
    }

    .post-card {
        padding: 20px;
        margin-bottom: 15px;
    }
}
    </style>
</head>
<body>
    <div class="profile-container">
        <!-- Sidebar Navigation -->
        <aside class="sidebar">
            <div class="logo">
                <div class="logo-icon"><img width="50px" style="border-radius: 50%;" src="/img/domz logo without text.png" alt="domz logo"></div>
                <span class="logo-text">Domz</span>
            </div>

            <nav>
                <ul class="nav-menu">
                    <li class="nav-item">
                        <a href="/dashboard" class="nav-link">
                            <svg class="nav-icon" viewBox="0 0 24 24">
                                <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>
                            </svg>
                            Home
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="/create-post" class="nav-link">
                            <svg class="nav-icon" viewBox="0 0 24 24">
                                <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>
                            </svg>
                            Create Post
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="/friends" class="nav-link">
                            <svg class="nav-icon" viewBox="0 0 24 24">
                                <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
                            </svg>
                            Friends
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="/messages" class="nav-link">
                            <svg class="nav-icon" viewBox="0 0 24 24">
                                <path d="M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"/>
                            </svg>
                            Messages
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="nav-link active">
                            <svg class="nav-icon" viewBox="0 0 24 24">
                                <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"/>
                            </svg>
                            Profile
                        </a>
                    </li>
                </ul>
            </nav>
        </aside>

        <!-- Main Content -->
        <main class="main-content">
            <!-- Profile Header -->
            <section class="profile-header">
                <div class="profile-cover"></div>
                <div class="profile-info">
                    <div class="profile-avatar" id="profileAvatar" onclick="document.getElementById('profilePictureInput').click()">
                        <% if (currentUser.profilePicture) { %>
                            <img src="<%= currentUser.profilePicture %>" alt="Profile" style="width: 100%; height: 100%; object-fit: cover; border-radius: 50%;">
                        <% } else { %>
                            <%= currentUser.username.charAt(0).toUpperCase() %>
                        <% } %>
                        <div class="upload-overlay">
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="white">
                                <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                            </svg>
                        </div>
                    </div>
                    <input type="file" id="profilePictureInput" accept="image/*" style="display: none;">
                    <div class="profile-details">
                        <h1 class="profile-name"><%= currentUser.fullName || currentUser.username %></h1>
                        <p class="profile-username">@<%= currentUser.username %></p>
                        <% if (currentUser.bio) { %>
                            <p class="profile-bio"><%= currentUser.bio %></p>
                        <% } else { %>
                            <p class="profile-bio" style="color: #999; font-style: italic;">Add a bio to tell people about yourself</p>
                        <% } %>
                        <div class="profile-meta">
                            <% if (currentUser.location) { %>
                                <div class="meta-item">
                                    <svg class="meta-icon" viewBox="0 0 24 24">
                                        <path d="M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z"/>
                                    </svg>
                                    <%= currentUser.location %>
                                </div>
                            <% } %>
                            <div class="meta-item">
                                <svg class="meta-icon" viewBox="0 0 24 24">
                                    <path d="M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z"/>
                                </svg>
                                Joined <%= new Date(currentUser.createdAt).toLocaleDateString('en-US', {month: 'long', year: 'numeric'}) %>
                            </div>
                            <div class="meta-item" id="onlineStatus">
                                <svg class="meta-icon" viewBox="0 0 24 24">
                                    <circle cx="12" cy="12" r="10" fill="<%= currentUser.isOnline ? '#10b981' : '#6b7280' %>"/>
                                </svg>
                                <%= currentUser.isOnline ? 'Online' : 'Last seen ' + new Date(currentUser.lastSeen).toLocaleDateString() %>
                            </div>
                        </div>
                        
                    </div>
                    <div class="profile-actions">
                        <!-- <button class="action-btn btn-primary">
                            <svg class="btn-icon" viewBox="0 0 24 24">
                                <path d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"/>
                            </svg>
                            Edit Profile
                        </button>
                        <button class="action-btn btn-secondary">
                            <svg class="btn-icon" viewBox="0 0 24 24">
                                <path d="M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.50-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92 1.61 0 2.92-1.31 2.92-2.92s-1.31-2.92-2.92-2.92z"/>
                            </svg>
                            Share Profile
                        </button>
                    </div> -->
                </div>
            </section>



            <!-- Content Tabs -->
            <section class="content-tabs">
                <div class="tabs-header">
                    <button class="tab-btn active" onclick="switchTab(event, 'settings')">Settings</button>
                </div>

                <a style="margin-top: 50px ;color: #fff; background-color: red; padding: 10px; border-radius: 5px; text-decoration: none; font-weight: bold;" href="/logout">Logout</a>

                <div class="tab-content">
                    <!-- Settings Tab -->
                    <div class="tab-pane active" id="settings">
                        <div id="profileMessage" class="profile-message" style="display: none;"></div>
                        <form class="settings-form" id="profileForm">
                            <div class="form-group">
                                <label class="form-label" for="fullName">Full Name</label>
                                <input type="text" id="fullName" name="fullName" class="form-input" value="<%= currentUser.fullName || '' %>" placeholder="Enter your full name" maxlength="100">
                            </div>

                            <div class="form-group">
                                <label class="form-label" for="username">Username (Read-only)</label>
                                <input type="text" id="username" class="form-input" value="<%= currentUser.username %>" placeholder="Username" readonly style="background: #f5f5f5; cursor: not-allowed;">
                            </div>

                            <div class="form-group">
                                <label class="form-label" for="email">Email Address (Read-only)</label>
                                <input type="email" id="email" class="form-input" value="<%= currentUser.email %>" placeholder="Email" readonly style="background: #f5f5f5; cursor: not-allowed;">
                            </div>

                            <div class="form-group">
                                <label class="form-label" for="bio">Bio <span class="char-count" id="bioCharCount">(<%= (currentUser.bio || '').length %>/300)</span></label>
                                <textarea id="bio" name="bio" class="form-input form-textarea" placeholder="Tell us about yourself..." maxlength="300"><%= currentUser.bio || '' %></textarea>
                            </div>

                            <div class="form-group">
                                <label class="form-label" for="location">Location</label>
                                <input type="text" id="location" name="location" class="form-input" value="<%= currentUser.location || '' %>" placeholder="Enter your location" maxlength="100">
                            </div>

                            <div class="form-group">
                                <label class="form-label" for="profilePicture">Profile Picture</label>
                                <div class="profile-picture-upload">
                                    <div class="current-picture">
                                        <% if (currentUser.profilePicture) { %>
                                            <img src="<%= currentUser.profilePicture %>" alt="Current profile" id="currentProfileImg" style="width: 80px; height: 80px; object-fit: cover; border-radius: 50%; border: 3px solid #6755FE;">
                                        <% } else { %>
                                            <div id="currentProfileImg" style="width: 80px; height: 80px; background: #6755FE; border-radius: 50%; display: flex; align-items: center; justify-content: center; color: white; font-size: 32px; font-weight: bold;"><%= currentUser.username.charAt(0).toUpperCase() %></div>
                                        <% } %>
                                    </div>
                                    <div class="upload-controls">
                                        <button type="button" class="action-btn btn-secondary" onclick="document.getElementById('profilePictureInput').click()">
                                            <svg class="btn-icon" viewBox="0 0 24 24">
                                                <path d="M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z"/>
                                            </svg>
                                            Choose File
                                        </button>
                                        <% if (currentUser.profilePicture) { %>
                                            <button type="button" class="action-btn" style="background: #ef4444; color: white; margin-left: 10px;" onclick="deleteProfilePicture()">
                                                <svg class="btn-icon" viewBox="0 0 24 24">
                                                    <path d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z"/>
                                                </svg>
                                                Remove
                                            </button>
                                        <% } %>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="form-label" for="privacy">Profile Privacy</label>
                                <select id="privacy" class="form-input">
                                    <option value="public">Public - Anyone can see your profile</option>
                                    <option value="friends">Friends Only - Only friends can see your profile</option>
                                    <option value="private">Private - Only you can see your profile</option>
                                </select>
                            </div>

                            <div class="form-group">
                                <button type="submit" class="action-btn btn-primary">
                                    <svg class="btn-icon" viewBox="0 0 24 24">
                                        <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/>
                                    </svg>
                                    Save Changes
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </section>
        </main>
    </div>

     <!-- Mobile Bottom Navigation -->
     <nav class="mobile-nav">
        <div class="mobile-nav-items">
            <a href="/dashboard" class="mobile-nav-item active">
                <svg class="mobile-nav-icon" viewBox="0 0 24 24">
                    <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>
                </svg>
                <span class="mobile-nav-text">Home</span>
            </a>
            <a href="/create-post" class="mobile-nav-item">
                <svg class="mobile-nav-icon" viewBox="0 0 24 24">
                    <path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"/>
                </svg>
                <span class="mobile-nav-text">Create Post</span>
            </a>
            <a href="/friends" class="mobile-nav-item">
                <svg class="nav-icon" viewBox="0 0 24 24">
                    <path d="M16 4c0-1.11.89-2 2-2s2 .89 2 2-.89 2-2 2-2-.89-2-2zM4 18v-1c0-1.1.9-2 2-2s2 .9 2 2v1h8v-1c0-1.1.9-2 2-2s2 .9 2 2v1h2v2H2v-2h2zm5.5-3c.83 0 1.5-.67 1.5-1.5S10.33 12 9.5 12 8 12.67 8 13.5 8.67 15 9.5 15zm5 0c.83 0 1.5-.67 1.5-1.5S15.33 12 14.5 12 13 12.67 13 13.5 13.67 15 14.5 15z"/>
                </svg>
                <span class="mobile-nav-text">Friends</span>
            </a>
            <a href="/messages" class="mobile-nav-item">
                <svg class="mobile-nav-icon" viewBox="0 0 24 24">
                    <path d="M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"/>
                </svg>
                <span class="mobile-nav-text">Messages</span>
            </a>
            <a href="/profile" class="mobile-nav-item">
                <svg class="mobile-nav-icon" viewBox="0 0 24 24">
                    <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"/>
                </svg>
                <span class="mobile-nav-text">Profile</span>
            </a>
        </div>
    </nav>

    <script>
        function switchTab(event, tabName) {
            // Remove active class from all tab buttons
            document.querySelectorAll('.tab-btn').forEach(btn => {
                btn.classList.remove('active');
            });

            // Hide all tab panes
            document.querySelectorAll('.tab-pane').forEach(pane => {
                pane.classList.remove('active');
            });

            // Add active class to clicked button
            event.target.classList.add('active');

            // Show selected tab pane
            document.getElementById(tabName).classList.add('active');
        }

        // Profile form submission
        document.getElementById('profileForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const data = {
                fullName: formData.get('fullName'),
                bio: formData.get('bio'),
                location: formData.get('location')
            };
            
            const saveBtn = this.querySelector('.btn-primary');
            const originalText = saveBtn.innerHTML;
            
            // Show loading state
            saveBtn.innerHTML = `
                <svg class="btn-icon" viewBox="0 0 24 24" style="animation: spin 1s linear infinite;">
                    <circle cx="12" cy="12" r="10"/>
                    <path d="M12 6v6l4 2"/>
                </svg>
                Saving...
            `;
            saveBtn.disabled = true;
            
            try {
                const response = await fetch('/api/profile/update', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });
                
                const result = await response.json();
                
                if (response.ok) {
                    showMessage('Profile updated successfully!', 'success');
                    
                    // Update profile display
                    document.querySelector('.profile-name').textContent = result.user.fullName || result.user.username;
                    if (result.user.bio) {
                        document.querySelector('.profile-bio').textContent = result.user.bio;
                        document.querySelector('.profile-bio').style.fontStyle = 'normal';
                        document.querySelector('.profile-bio').style.color = '#555';
                    }
                    
                    // Update location in meta if it exists
                    const locationMeta = document.querySelector('.meta-item svg path[d*="12 2C8.13"]');
                    if (locationMeta && result.user.location) {
                        locationMeta.parentElement.parentElement.querySelector('span, text').textContent = result.user.location;
                    }
                    
                    saveBtn.innerHTML = `
                        <svg class="btn-icon" viewBox="0 0 24 24">
                            <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/>
                        </svg>
                        Saved!
                    `;
                } else {
                    showMessage(result.error || 'Failed to update profile', 'error');
                    saveBtn.innerHTML = originalText;
                }
            } catch (error) {
                console.error('Error updating profile:', error);
                showMessage('Network error. Please try again.', 'error');
                saveBtn.innerHTML = originalText;
            } finally {
                setTimeout(() => {
                    saveBtn.innerHTML = originalText;
                    saveBtn.disabled = false;
                }, 2000);
            }
        });
        
        // Profile picture upload
        document.getElementById('profilePictureInput').addEventListener('change', async function(e) {
            const file = e.target.files[0];
            if (!file) return;
            
            // Validate file
            if (!file.type.startsWith('image/')) {
                showMessage('Please select a valid image file', 'error');
                return;
            }
            
            if (file.size > 5 * 1024 * 1024) { // 5MB
                showMessage('File size must be less than 5MB', 'error');
                return;
            }
            
            const formData = new FormData();
            formData.append('profilePicture', file);
            
            try {
                showMessage('Uploading image...', 'info');
                
                const response = await fetch('/api/profile/upload-picture', {
                    method: 'POST',
                    body: formData
                });
                
                const result = await response.json();
                
                if (response.ok) {
                    showMessage('Profile picture updated successfully!', 'success');
                    
                    // Update all profile images
                    const newImageUrl = result.profilePicture;
                    document.querySelector('#profileAvatar img, #profileAvatar').innerHTML = 
                        `<img src="${newImageUrl}" alt="Profile" style="width: 100%; height: 100%; object-fit: cover; border-radius: 50%;">`;
                    document.getElementById('currentProfileImg').src = newImageUrl;
                    
                    // Add remove button if it doesn't exist
                    const uploadControls = document.querySelector('.upload-controls');
                    if (!uploadControls.querySelector('button[onclick="deleteProfilePicture()"]')) {
                        const removeBtn = document.createElement('button');
                        removeBtn.type = 'button';
                        removeBtn.className = 'action-btn';
                        removeBtn.style.cssText = 'background: #ef4444; color: white; margin-left: 10px;';
                        removeBtn.onclick = deleteProfilePicture;
                        removeBtn.innerHTML = `
                            <svg class="btn-icon" viewBox="0 0 24 24">
                                <path d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z"/>
                            </svg>
                            Remove
                        `;
                        uploadControls.appendChild(removeBtn);
                    }
                } else {
                    showMessage(result.error || 'Failed to upload image', 'error');
                }
            } catch (error) {
                console.error('Error uploading image:', error);
                showMessage('Network error. Please try again.', 'error');
            }
        });
        
        // Delete profile picture
        window.deleteProfilePicture = async function() {
            if (!confirm('Are you sure you want to remove your profile picture?')) {
                return;
            }
            
            try {
                const response = await fetch('/api/profile/delete-picture', {
                    method: 'DELETE'
                });
                
                const result = await response.json();
                
                if (response.ok) {
                    showMessage('Profile picture removed successfully!', 'success');
                    
                    // Update profile avatar to show initial
                    const username = '<%= currentUser.username %>';
                    document.querySelector('#profileAvatar').innerHTML = 
                        `${username.charAt(0).toUpperCase()}<div class="upload-overlay"><svg width="24" height="24" viewBox="0 0 24 24" fill="white"><path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/></svg></div>`;
                    
                    // Update current profile image
                    const currentImg = document.getElementById('currentProfileImg');
                    currentImg.outerHTML = `<div id="currentProfileImg" style="width: 80px; height: 80px; background: #6755FE; border-radius: 50%; display: flex; align-items: center; justify-content: center; color: white; font-size: 32px; font-weight: bold;">${username.charAt(0).toUpperCase()}</div>`;
                    
                    // Remove the remove button
                    const removeBtn = document.querySelector('button[onclick="deleteProfilePicture()"]');
                    if (removeBtn) removeBtn.remove();
                } else {
                    showMessage(result.error || 'Failed to remove profile picture', 'error');
                }
            } catch (error) {
                console.error('Error removing profile picture:', error);
                showMessage('Network error. Please try again.', 'error');
            }
        };
        
        // Bio character counter
        document.getElementById('bio').addEventListener('input', function() {
            const charCount = this.value.length;
            const counter = document.getElementById('bioCharCount');
            counter.textContent = `(${charCount}/300)`;
            
            if (charCount > 250) {
                counter.style.color = '#ef4444';
            } else if (charCount > 200) {
                counter.style.color = '#f59e0b';
            } else {
                counter.style.color = '#666';
            }
        });
        
        // Show message function
        function showMessage(message, type = 'info') {
            const messageEl = document.getElementById('profileMessage');
            messageEl.textContent = message;
            messageEl.className = `profile-message ${type}`;
            messageEl.style.display = 'block';
            messageEl.style.padding = '12px 16px';
            messageEl.style.borderRadius = '8px';
            messageEl.style.marginBottom = '20px';
            messageEl.style.fontSize = '14px';
            messageEl.style.fontWeight = '500';
            
            if (type === 'success') {
                messageEl.style.background = '#dcfce7';
                messageEl.style.color = '#166534';
                messageEl.style.border = '1px solid #bbf7d0';
            } else if (type === 'error') {
                messageEl.style.background = '#fef2f2';
                messageEl.style.color = '#dc2626';
                messageEl.style.border = '1px solid #fecaca';
            } else {
                messageEl.style.background = '#dbeafe';
                messageEl.style.color = '#1d4ed8';
                messageEl.style.border = '1px solid #93c5fd';
            }
            
            setTimeout(() => {
                messageEl.style.display = 'none';
            }, 5000);
        }

        // Add spin animation for loading state
        const style = document.createElement('style');
        style.textContent = `
            @keyframes spin {
                from { transform: rotate(0deg); }
                to { transform: rotate(360deg); }
            }
        `;
        document.head.appendChild(style);

        // Handle post interactions
        document.addEventListener('click', function(e) {
            if (e.target.closest('.post-action')) {
                const button = e.target.closest('.post-action');
                const icon = button.querySelector('.post-action-icon');
                
                // Add ripple effect
                button.style.transform = 'scale(0.95)';
                setTimeout(() => {
                    button.style.transform = 'scale(1)';
                }, 150);

                // Simple like functionality
                if (icon && icon.querySelector('path[d*="21.35"]')) {
                    const numberElement = button.childNodes[button.childNodes.length - 1];
                    if (numberElement && numberElement.textContent.trim().match(/^\d+$/)) {
                        let currentCount = parseInt(numberElement.textContent.trim());
                        numberElement.textContent = ` ${currentCount + 1}`;
                        button.style.color = '#ef4444';
                        setTimeout(() => {
                            button.style.color = '';
                        }, 1000);
                    }
                }
            }
        });
    </script>
</body>
</html>